
<SubPageTemplate>:


# -----------------------------------------------------

# A label widget that wraps text
<WrapLabel>:
    text:""
    color: TXT_COLOR
    pos_hint:{'center_x':0.5, 'center_y':0.5}
    text_size: self.width, None
    size_hint: 0.8, None
    height: self.texture_size[1]
# -----------------------------------------------------

<MyButton>:
    text:""
    pos_hint:{'center_x': 0.5, 'center_y': 0.5}
    halign: 'center'
    size_hint:BTN_WIDTH,BTN_HEIGHT  #separate size hints results in clock iteration error
    font_style:'Button'
    background_color: BTN_COLOR
    # border: [0,0,0,0]

<MyButton2>:
    text:""
    pos_hint:{'center_x': 0.5, 'center_y': 0.5}
    size_hint_x:0.8
    font_style:'Button'
    background_color: BTN_COLOR
    halign: 'center'
    markup:True

<MyButton3>:
    text:""
    pos_hint:{'center_x': 0.5, 'center_y': 0.5}
    size_hint:0.8,0.25
    # size_hint_x:0.8
    font_style:'Button'
    background_color: BTN_COLOR
    halign: 'center'
    markup:True


<RoundedButton>:
    background_color: (0,0,0,0)
    background_normal:''
    canvas.before:
        Color:
            rgba: BTN_COLOR
        RoundedRectangle:
            size:self.size
            pos:self.pos
            radius: [18]

# -----------------------------------------------------

<MyActionBar>:
    title:""
    to_page:root.parent.parent
    pos_hint: {'top':1}
    background_color:BTN_COLOR
    # background_image:"pics/presplash_logo.png"
    icon: "reset.png"
    markup:True
    ActionView:
        HiddenIcon_ActionPrevious:
        # # ActionPrevious:
        ActionButton:
            icon:"pics/left.png"
            important: True
            on_release: root.chevron_left(root.parent.parent)
        ActionButton:
            id: AD
            text:root.title
            important: True
            background_down: self.background_normal
            on_release: root.chevron_left(root.parent.parent)
        # ActionButton:
            # text:"  "
        ActionButton:
            important: True
            icon:'pics/sun.png'
            on_release: app.toggle_theme()


# =======================================
<ScaleLabel@Label>:
    _scale: 1. if self.texture_size[0] < self.width else float(self.width) / self.texture_size[0]
    # _scale: 1. if self.texture_size[0] < self.width else float(self.width) / self.texture_size[0]
    canvas.before:
        PushMatrix
        Scale:
            origin: self.center
            x: self._scale or 1.
            y: self._scale or 1.
    canvas.after:
        PopMatrix

<-ScaleButton@Button>:
    state_image: self.background_normal if self.state == 'normal' else self.background_down
    disabled_image: self.background_disabled_normal if self.state == 'normal' else self.background_disabled_down
    _scale: 1. if self.texture_size[0] < self.width else float(self.width) / self.texture_size[0]
    canvas:
        Color:
            rgba: self.background_color
        BorderImage:
            border: self.border
            pos: self.pos
            size: self.size
            source: self.disabled_image if self.disabled else self.state_image
        PushMatrix
        Scale:
            origin: self.center
            x: self._scale or 1.
            y: self._scale or 1.
        Color:
            rgba: self.disabled_color if self.disabled else self.color
        Rectangle:
            texture: self.texture
            size: self.texture_size
            pos: int(self.center_x - self.texture_size[0] / 2.), int(self.center_y - self.texture_size[1] / 2.)
        PopMatrix

# =======================================

<NavButtons>:
    orientation: 'horizontal'
    size_hint_y:0.3
    Button:
        background_color: BTN_COLOR
        size_hint_y:0.5
        text:'                     <                       '
        on_release:root.parent.parent.arrow_left()
    Button:
        background_color: BTN_COLOR
        size_hint_y:0.5
        text:'                     >                       '
        on_release:
            # root.parent.ids['AirPollutionPage'].ids['android_tabs'].switch_tab('1')
            root.parent.parent.arrow_right()